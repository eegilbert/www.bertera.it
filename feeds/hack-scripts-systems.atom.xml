<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pietro Bertera's Blog</title><link href="http://www.bertera.it/" rel="alternate"></link><link href="http://www.bertera.it/feeds/hack-scripts-systems.atom.xml" rel="self"></link><id>http://www.bertera.it/</id><updated>2012-03-04T23:49:00+01:00</updated><entry><title>How to push a public IP on your laptop using SSH bridged tunnel</title><link href="http://www.bertera.it/how-to-push-a-public-ip-on-your-laptop-using-ssh-bridged-tunnel.html" rel="alternate"></link><published>2012-03-04T23:49:00+01:00</published><author><name>admin</name></author><id>tag:www.bertera.it,2012-03-04:how-to-push-a-public-ip-on-your-laptop-using-ssh-bridged-tunnel.html</id><summary type="html">&lt;p&gt;In my &lt;a href="http://www.bertera.it/index.php/2008/12/22/vpn-layer-3-con-openssh/" title="VPN layer 3 con OpenSSH"&gt;previous
post&lt;/a&gt; I
talked about Layer 3 VPN feature of OpenSSH (starting from version
4.3).&lt;br /&gt;
Now, I'm talking about bridged VPN or Layer 2 VPN. With this feature
you can create a virtual network device that, through the encrypted
tunnel, is connected on the same network segment of remote server. In
fact the VPN acts as a network switch connecting local virtual device
with remote device in same ethernet network.&lt;/p&gt;
&lt;p&gt;With this setup your SSH client will connect to remote server and start
forwarding packet between local end remote TUN/TAP device.&lt;br /&gt;
All packets are forward through the encrypted SSH tunnel.&lt;/p&gt;
&lt;p&gt;using &lt;strong&gt;-o Tunnel=ethernet&lt;/strong&gt; instead of &lt;strong&gt;&lt;em&gt;-o
Tunnel=point-to-point&lt;/em&gt;&lt;/strong&gt; ssh process try to use a tap device and
forwards all ethernet frames (layer 2). You can specify TUN/TAP local
and remote device index with &lt;strong&gt;&lt;em&gt;-w&lt;/em&gt;&lt;/strong&gt; option:&lt;/p&gt;
&lt;p&gt;This command: &lt;code&gt;ssh -o Tunnel=ethernet -w 0:1 host.example.com&lt;/code&gt;
establish an ssh connection to host.example.com and forwards all ethernet
frames from local tap0 to remote tap1 and vice-versa.&lt;br /&gt;
If tap0 and tap1 doesn't exist ssh will try to create.&lt;/p&gt;
&lt;p&gt;In order to setup a public IP on your laptop you need to create a bridge
between remote remote public ethernet device and remote TUN/TAP device.
Below the accomplishment step for this task:&lt;/p&gt;
&lt;p&gt;Assuming that this is the public network configuration:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Public IP:&lt;/strong&gt; 78.47.249.187&lt;br /&gt;
&lt;strong&gt;Public Network:&lt;/strong&gt; 78.47.249.160&lt;br /&gt;
&lt;strong&gt;Public Gateway:&lt;/strong&gt; 78.47.249.190&lt;br /&gt;
&lt;strong&gt;Laptop Public IP:&lt;/strong&gt; 78.47.249.187&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On server side:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a bridge: &lt;code&gt;brctl addbr br0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;create the remote tap device: &lt;code&gt;tunctl -t tap0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add devices to bridge: &lt;code&gt;brctl addif br0 eth0 &amp;amp;&amp;amp; brctl addif br0 tap0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup the remote public IP address on bridge interface: &lt;code&gt;ip addr add  78.47.249.187/27 dev br0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup link and promiscuous mode: &lt;code&gt;ip link set up promisc on dev tap0  &amp;amp;&amp;amp; ip link set up promisc on dev eth0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup default gateway: &lt;code&gt;ip route add default via  78.47.249.190&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Permit tunnel on ssh server: add "&lt;strong&gt;PermitTunnel yes&lt;/strong&gt;" on your sshd_config sshd configuration file&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now the public machine must be connected to public network and
reachable.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;On client side:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;connect your laptop to server and create the tunnel &lt;code&gt;ssh -o Tunnel=ethernet -w 0:0 root@78.47.249.187&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;add public ip to your client and setup link: &lt;code&gt;ip addr add  78.47.249.188/27 dev tap0 &amp;amp;&amp;amp; ip link set up dev tap0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now your laptop is directly connected to public remote network through
tap0 device.&lt;br /&gt;
Following steps are needed only  if you  need to substitute your
gateway with public gw:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;setup a static route to remote server (you need to know your current
default gw): &lt;code&gt;ip route add 78.47.249.187 via my.old.def.gw&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;setup the new default gw: &lt;code&gt;ip route del default via my.old.def.gw &amp;amp;&amp;amp; ip route add default via 78.47.249.190 dev tap0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Tips:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can automate all client task with a simple bash script&lt;/li&gt;
&lt;li&gt;&lt;em&gt;-u&lt;/em&gt; and &lt;em&gt;-g&lt;/em&gt; tunctl options permit to manage TUN/TAP device with an unprivileged user&lt;/li&gt;
&lt;li&gt;use ssh public key authentication and a dedicated unprivileged user&lt;/li&gt;
&lt;li&gt;&lt;em&gt;-NTCf -o ServerAliveInterval=60&lt;/em&gt; ssh options are your friends&lt;/li&gt;
&lt;li&gt;following the configuration files for automatic and reboot persistent configuration on server side (for RedHat based distro):&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;/etc/sysconfig/network-scripts/ifcfg-br0&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEVICE=&amp;quot;br0&amp;quot;
ONBOOT=&amp;quot;yes&amp;quot;
TYPE=Bridge
BOOTPROTO=none
IPADDR=78.47.249.187
PREFIX=27
GATEWAY=78.47.249.190
DEFROUTE=yes
IPV4_FAILURE_FATAL=yes
IPV6INIT=no
NAME=&amp;quot;System Bridge&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/sysconfig/network-scripts/ifcfg-tap0&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEVICE=tap0
TYPE=Tap
OWNER=vpnuser #use an unprivileged user for your TUN/TAP device
BRIDGE=br0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;/etc/sysconfig/network-scripts/ifcfg-eth0&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;DEVICE=&amp;quot;eth0&amp;quot;
ONBOOT=&amp;quot;yes&amp;quot;
TYPE=Ethernet
BRIDGE=br0
&lt;/pre&gt;&lt;/div&gt;</summary><category term="routing"></category><category term="ssh"></category><category term="vpn"></category></entry></feed>